trigger:
- master

resources:
- repo: self

variables:
  nextjsRepository: 'imstevemmmmmfernfrontend_nextjs'
  nginxRepository: 'imstevemmmmmfernfrontend_nginx'
  
  dockerRegistryServiceConnection: '9ba409da-5fed-467e-bb2b-adb45b06c174'
  imageRepository: 'imstevemmmmmfernfrontend'
  containerRegistry: 'ferndocker.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '${Build.BuildId}'
  imagePullSecret: 'ferndocker14531366-auth'

  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure subscription 1(f7c1860a-e055-4556-81d2-8c9174ca8021)'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure subscription 1(f7c1860a-e055-4556-81d2-8c9174ca8021)'
        azureContainerRegistry: '{"loginServer":"ferndocker.azurecr.io", "id" : "/subscriptions/f7c1860a-e055-4556-81d2-8c9174ca8021/resourceGroups/Fern/providers/Microsoft.ContainerRegistry/registries/FernDocker"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'ImStevemmmmmfernfrontend-2937.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(nextjsRepository):$(tag)
                $(containerRegistry)/$(nginxRepository):$(tag)

