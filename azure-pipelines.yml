trigger:
    - deployment

resources:
    - repo: self

variables:
    projectName: "frontend"
    nextjsRepository: "nextjs"
    nginxRepository: "nginx"

    dockerRegistryServiceConnection: "e3e6799a-1f72-4998-bfc2-7cdafd464719"
    containerRegistry: "ferndocker.azurecr.io"
    imagePullSecret: "ferndocker1265143b-auth"

    vmImageName: "ubuntu-latest"
    tag: $(Build.BuildId)

stages:
    - stage: Build
      displayName: Build stage
      jobs:
          - job: Build
            displayName: Build NextJS and NGINX
            pool:
                vmImage: $(vmImageName)
            steps:
                - task: DockerCompose@0
                  displayName: Build docker images
                  inputs:
                      containerregistrytype: "Azure Container Registry"
                      azureSubscription: "Azure subscription 1(f7c1860a-e055-4556-81d2-8c9174ca8021)"
                      azureContainerRegistry: '{"loginServer":"ferndocker.azurecr.io", "id" : "/subscriptions/f7c1860a-e055-4556-81d2-8c9174ca8021/resourceGroups/Fern/providers/Microsoft.ContainerRegistry/registries/FernDocker"}'
                      dockerComposeFile: "**/docker-compose.yml"
                      projectName: $(projectName)
                      action: "Build services"
                      additionalImageTags: |
                          $(tag)
                - task: DockerCompose@0
                  displayName: Push docker images
                  inputs:
                      containerregistrytype: "Azure Container Registry"
                      azureSubscription: "Azure subscription 1(f7c1860a-e055-4556-81d2-8c9174ca8021)"
                      azureContainerRegistry: '{"loginServer":"ferndocker.azurecr.io", "id" : "/subscriptions/f7c1860a-e055-4556-81d2-8c9174ca8021/resourceGroups/Fern/providers/Microsoft.ContainerRegistry/registries/FernDocker"}'
                      dockerComposeFile: "**/docker-compose.yml"
                      projectName: $(projectName)
                      action: "Push services"

                - upload: manifests/nextjs
                  displayName: Publish NextJS manifests
                  artifact: manifests/nextjs

                - upload: manifests/nginx
                  displayName: Publish NGINX manifests
                  artifact: manifests/nginx

    - stage: Deploy
      displayName: Deploy stage
      dependsOn: Build

      jobs:
          - deployment: Deploy
            displayName: Deploy NextJS and NGINX
            pool:
                vmImage: $(vmImageName)
            environment: "ImStevemmmmmfernfrontend-4579.default"
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - task: KubernetesManifest@0
                              displayName: Create imagePullSecret
                              inputs:
                                  action: createSecret
                                  secretName: $(imagePullSecret)
                                  dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

                            - task: KubernetesManifest@0
                              displayName: Deploy to Kubernetes cluster
                              inputs:
                                  action: deploy
                                  manifests: |
                                      $(Pipeline.Workspace)/manifests/nextjs/deployment.yml
                                      $(Pipeline.Workspace)/manifests/nextjs/service.yml
                                      $(Pipeline.Workspace)/manifests/nginx/deployment.yml
                                      $(Pipeline.Workspace)/manifests/nginx/service.yml
                                  imagePullSecrets: |
                                      $(imagePullSecret)
                                  containers: |
                                      $(containerRegistry)/$(projectName)_$(nextjsRepository):$(tag)
                                      $(containerRegistry)/$(projectName)_$(nginxRepository):$(tag)
